@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Academic Manager";
}

<!-- Custom CSS for additional styling -->
<style>
    .dashboard-header {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: white;
        padding: 25px;
        border-radius: 10px;
        margin-bottom: 25px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
    }

        .dashboard-header::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 1px, transparent 1px);
            background-size: 20px 20px;
            transform: rotate(30deg);
        }

    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.85rem;
        display: inline-block;
        text-align: center;
        min-width: 80px;
    }

    .status-approved {
        background: linear-gradient(135deg, #d4edda, #c3e6cb);
        color: #155724;
        border: 1px solid #b8dfc2;
        box-shadow: 0 2px 4px rgba(40, 167, 69, 0.2);
    }

    .status-pending {
        background: linear-gradient(135deg, #fff3cd, #ffeaa7);
        color: #856404;
        border: 1px solid #f5e3a4;
        box-shadow: 0 2px 4px rgba(255, 193, 7, 0.2);
    }

    .status-rejected {
        background: linear-gradient(135deg, #f8d7da, #f5c6cb);
        color: #721c24;
        border: 1px solid #f1b4ba;
        box-shadow: 0 2px 4px rgba(220, 53, 69, 0.2);
    }

    .table-hover tbody tr:hover {
        background-color: rgba(106, 17, 203, 0.05);
        transform: translateY(-1px);
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .action-buttons {
        display: flex;
        gap: 8px;
        flex-wrap: wrap;
    }

    .btn-approve {
        background: linear-gradient(to right, #00b09b, #96c93d);
        border: none;
        color: white;
        border-radius: 6px;
        padding: 6px 12px;
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 176, 155, 0.3);
    }

        .btn-approve:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 176, 155, 0.4);
            color: white;
        }

    .btn-reject {
        background: linear-gradient(to right, #ff416c, #ff4b2b);
        border: none;
        color: white;
        border-radius: 6px;
        padding: 6px 12px;
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(255, 65, 108, 0.3);
    }

        .btn-reject:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(255, 65, 108, 0.4);
            color: white;
        }

    .btn-download {
        background: linear-gradient(to right, #4facfe, #00f2fe);
        border: none;
        color: white;
        border-radius: 6px;
        padding: 6px 12px;
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(79, 172, 254, 0.3);
    }

        .btn-download:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(79, 172, 254, 0.4);
            color: white;
        }

    .card-stat {
        background: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.08);
        margin-bottom: 20px;
        border-left: 5px solid;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .card-stat:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.12);
        }

        .card-stat::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: inherit;
            opacity: 0.3;
        }

    .stat-approved {
        border-left-color: #28a745;
    }

    .stat-pending {
        border-left-color: #ffc107;
    }

    .stat-rejected {
        border-left-color: #dc3545;
    }

    .stat-value {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 5px;
        color: #2c3e50;
    }

    .stat-label {
        font-size: 0.9rem;
        color: #7f8c8d;
        margin-bottom: 0;
        font-weight: 500;
    }

    .table th {
        background: linear-gradient(135deg, #4e54c8, #6a11cb);
        color: white;
        border: none;
        padding: 16px 12px;
        font-weight: 600;
        font-size: 0.95rem;
        position: relative;
    }

        .table th::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 10%;
            right: 10%;
            height: 2px;
            background: rgba(255, 255, 255, 0.3);
        }

    .table td {
        padding: 14px 12px;
        vertical-align: middle;
        border-bottom: 1px solid #f1f3f4;
    }

    .table-container {
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        background: white;
        border: 1px solid #e9ecef;
    }

    .no-file {
        color: #95a5a6;
        font-style: italic;
        font-size: 0.9rem;
    }

    .type-badge {
        background: linear-gradient(135deg, #e9ecef, #dee2e6);
        color: #495057;
        padding: 5px 10px;
        border-radius: 6px;
        font-size: 0.8rem;
        font-weight: 500;
        border: 1px solid #ced4da;
    }

    .amount-cell {
        font-weight: 600;
        color: #2c3e50;
    }

    .notes-cell {
        max-width: 200px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

   

    {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .table tbody tr {
        animation: fadeIn 0.5s ease;
    }

    
    {
        flex-direction: column;
    }

    .table-container {
        border-radius: 8px;
        margin: 0 -15px;
        width: calc(100% + 30px);
    }

    .dashboard-header {
        padding: 20px 15px;
        margin: 0 -15px 25px;
        border-radius: 0 0 10px 10px;
    }

    }
</style>

<div class="dashboard-header">
    <div class="row align-items-center">
        <div class="col-md-8">
            <h1 class="display-5 fw-bold">Academic Manager Dashboard</h1>
            <p class="lead mb-0">Manage and review academic claims and submissions</p>
        </div>
        <div class="col-md-4 text-md-end">
            <span class="badge bg-light text-dark fs-6 p-2">Total: @Model.Count() Claims</span>
        </div>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-4">
        <div class="card-stat stat-approved">
            <p class="stat-value">@Model.Count(c => c.Status == "Approved")</p>
            <p class="stat-label">Approved Claims</p>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card-stat stat-pending">
            <p class="stat-value">@Model.Count(c => c.Status == "Pending")</p>
            <p class="stat-label">Pending Review</p>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card-stat stat-rejected">
            <p class="stat-value">@Model.Count(c => c.Status == "Rejected")</p>
            <p class="stat-label">Rejected Claims</p>
        </div>
    </div>
</div>

<div class="table-container">
    <table class="table table-hover mb-0">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Type</th>
                <th>Hours</th>
                <th>Rate</th>
                <th>Notes</th>
                <th>Status</th>
                <th>File</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var claim in Model)
            {
                <tr>
                    <td class="fw-bold text-primary">#@claim.Id</td>
                    <td class="fw-medium">@claim.Name</td>
                    <td><span class="type-badge">@claim.Type</span></td>
                    <td class="amount-cell">@(claim.HoursWorked ?? 0)</td>
                    <td class="amount-cell">$@(claim.HourlyRate ?? 0)</td>
                    <td class="notes-cell" title="@claim.Notes">@(string.IsNullOrEmpty(claim.Notes) ? "-" : claim.Notes)</td>
                    <td>
                        @{
                            var statusClass = "status-badge ";
                            if (claim.Status == "Approved") statusClass += "status-approved";
                            else if (claim.Status == "Rejected") statusClass += "status-rejected";
                            else statusClass += "status-pending";
                        }
                        <span class="@statusClass">@claim.Status</span>
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(claim.DocumentPath))
                        {
                            <a asp-action="Download" asp-route-type="@claim.Type" asp-route-id="@claim.Id" class="btn btn-download btn-sm">Download</a>
                        }
                        else
                        {
                            <span class="no-file">No file</span>
                        }
                    </td>
                    <td>
                        <div class="action-buttons">
                            <form asp-action="Approve" method="post" style="display:inline;">
                                <input type="hidden" name="id" value="@claim.Id" />
                                <input type="hidden" name="type" value="@claim.Type" />
                                <button type="submit" class="btn btn-approve btn-sm">Approve</button>
                            </form>
                            <form asp-action="Reject" method="post" style="display:inline;">
                                <input type="hidden" name="id" value="@claim.Id" />
                                <input type="hidden" name="type" value="@claim.Type" />
                                <input type="hidden" name="returnTo" value="AcademicManager" />
                                <button type="submit" class="btn btn-reject btn-sm">Reject</button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>